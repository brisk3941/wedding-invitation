name: Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # .env 생성 (Secrets/Variables 사용)
      - name: Setup .env
        run: |
          cat > .env <<'EOF'
          VITE_NAVER_MAP_CLIENT_ID=${{ secrets.VITE_NAVER_MAP_CLIENT_ID }}
          VITE_KAKAO_SDK_JS_KEY=${{ secrets.VITE_KAKAO_SDK_JS_KEY }}
          VITE_SERVER_URL=${{ vars.VITE_SERVER_URL }}
          VITE_STATIC_ONLY=${{ vars.VITE_STATIC_ONLY }}
          EOF

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      # dist 또는 build 자동 감지
      - name: Detect output dir
        id: detect
        shell: bash
        run: |
          if [ -f "dist/index.html" ]; then
            echo "out=dist" >> $GITHUB_OUTPUT
          elif [ -f "build/index.html" ]; then
            echo "out=build" >> $GITHUB_OUTPUT
          else
            echo "No build output found"; ls -la; exit 1
          fi
          echo "Detected output dir: ${{ steps.detect.outputs.out }}"

      # SPA 새로고침 404 방지
      - name: Add SPA fallback (404.html)
        run: cp ${{ steps.detect.outputs.out }}/index.html ${{ steps.detect.outputs.out }}/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./${{ steps.detect.outputs.out }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
